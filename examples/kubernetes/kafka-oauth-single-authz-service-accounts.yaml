---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oidc-reader
  annotations:
    kubernetes.io/description: |
        A cluster role which allows access to the OpenID Connect endpoints on
        the API Server.
rules:
  - nonResourceURLs: ["/.well-known/openid-configuration", "/openid/v1/jwks"]
    verbs: ["get", "post"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oidc-reader-binding
  annotations:
  kubernetes.io/description: |
      A role binding which allows for anonymous access to those endpoints
      from consuming applications.
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oidc-reader
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: "system:anonymous"
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
spec:
  kafka:
    version: 3.5.0
    replicas: 1
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
        authentication:
          type: oauth
          enablePlain: true
          checkAccessTokenType: false
          validIssuerUri: https://kubernetes.default.svc.cluster.local
          jwksEndpointUri: https://kubernetes.default.svc.cluster.local/openid/v1/jwks
          userNameClaim: sub
          tlsTrustedCertificates:
            - secretName: kube-root-ca
              certificate: ca.crt
    authorization:
      type: simple
      superUsers:
        - system:serviceaccount:default:default
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
    jvmOptions:
      javaSystemProperties:
        - name: "oauth.include.accept.header"
          value: "false"
    logging:
      type: inline
      loggers:
        log4j.logger.io.strimzi: DEBUG
    storage:
      type: ephemeral
  zookeeper:
    replicas: 1
    storage:
      type: ephemeral
  entityOperator:
    topicOperator: {}
    userOperator: {}
